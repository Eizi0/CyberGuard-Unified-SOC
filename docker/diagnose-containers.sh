#!/bin/bash

# Script de diagnostic pour Velociraptor et Shuffle
# =================================================

echo "üîç DIAGNOSTIC VELOCIRAPTOR & SHUFFLE"
echo "===================================="

# Fonction pour v√©rifier un service
check_service() {
    local service_name=$1
    local container_name=$2
    local port=$3
    local health_endpoint=$4
    
    echo ""
    echo "üìã V√©rification de $service_name ($container_name)"
    echo "=================================================="
    
    # V√©rifier si le conteneur existe
    if docker ps -a --format "table {{.Names}}" | grep -q "^$container_name$"; then
        echo "‚úÖ Conteneur trouv√©: $container_name"
        
        # V√©rifier l'√©tat du conteneur
        container_status=$(docker inspect --format='{{.State.Status}}' $container_name)
        echo "üìä √âtat: $container_status"
        
        if [ "$container_status" = "running" ]; then
            echo "‚úÖ Conteneur en cours d'ex√©cution"
            
            # V√©rifier le port
            if docker port $container_name | grep -q ":$port"; then
                echo "‚úÖ Port $port expos√©"
                
                # Tester la connectivit√©
                if curl -f "http://localhost:$port$health_endpoint" >/dev/null 2>&1; then
                    echo "‚úÖ Service accessible sur le port $port"
                else
                    echo "‚ùå Service non accessible sur le port $port"
                fi
            else
                echo "‚ùå Port $port non expos√©"
            fi
            
        else
            echo "‚ùå Conteneur arr√™t√©"
            echo "üìú Derniers logs:"
            docker logs --tail 20 $container_name
        fi
        
    else
        echo "‚ùå Conteneur non trouv√©: $container_name"
    fi
}

# V√©rifier Docker
echo "üê≥ V√©rification de Docker"
echo "========================="
if command -v docker >/dev/null 2>&1; then
    echo "‚úÖ Docker install√©"
    if docker info >/dev/null 2>&1; then
        echo "‚úÖ Docker daemon en cours d'ex√©cution"
    else
        echo "‚ùå Docker daemon non accessible"
        exit 1
    fi
else
    echo "‚ùå Docker non install√©"
    exit 1
fi

# V√©rifier Docker Compose
if command -v docker-compose >/dev/null 2>&1; then
    echo "‚úÖ Docker Compose install√©"
else
    echo "‚ùå Docker Compose non install√©"
fi

# V√©rifier les services
check_service "Velociraptor" "velociraptor" "8889" "/health"
check_service "Shuffle" "shuffle" "3443" "/health"

echo ""
echo "üìä R√âSUM√â DES CONTENEURS"
echo "======================="
docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "(velociraptor|shuffle)"

echo ""
echo "üîç DIAGNOSTIC DES FICHIERS"
echo "=========================="

# V√©rifier les fichiers Velociraptor
echo ""
echo "üìÅ Velociraptor"
echo "--------------"
if [ -f "./velociraptor/Dockerfile" ]; then
    echo "‚úÖ Dockerfile pr√©sent"
else
    echo "‚ùå Dockerfile manquant"
fi

if [ -f "./velociraptor/config/server.config.yaml" ]; then
    echo "‚úÖ Configuration pr√©sente"
else
    echo "‚ùå Configuration manquante"
fi

if [ -f "./velociraptor/init-velociraptor.sh" ]; then
    echo "‚úÖ Script d'initialisation pr√©sent"
else
    echo "‚ùå Script d'initialisation manquant"
fi

# V√©rifier les fichiers Shuffle
echo ""
echo "üìÅ Shuffle"
echo "----------"
if [ -f "./shuffle/Dockerfile" ]; then
    echo "‚úÖ Dockerfile pr√©sent"
else
    echo "‚ùå Dockerfile manquant"
fi

if [ -f "./shuffle/config/shuffle-config.yaml" ]; then
    echo "‚úÖ Configuration pr√©sente"
else
    echo "‚ùå Configuration manquante"
fi

if [ -f "./shuffle/init-shuffle.sh" ]; then
    echo "‚úÖ Script d'initialisation pr√©sent"
else
    echo "‚ùå Script d'initialisation manquant"
fi

echo ""
echo "üöÄ COMMANDES DE D√âPANNAGE"
echo "========================="
echo "Pour reconstruire les images:"
echo "  docker-compose build velociraptor shuffle"
echo ""
echo "Pour red√©marrer les services:"
echo "  docker-compose restart velociraptor shuffle"
echo ""
echo "Pour voir les logs:"
echo "  docker-compose logs velociraptor"
echo "  docker-compose logs shuffle"
echo ""
echo "Pour d√©marrer en mode d√©bug:"
echo "  docker-compose up velociraptor shuffle"
