version: '3.8'

services:
  # Backend API Service
  backend:
    build: ../backend
    container_name: cyberguard-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - MONGODB_URI=mongodb://mongodb:27017/cyberguard
    volumes:
      - ../backend:/app
    depends_on:
      - mongodb
    restart: unless-stopped

  # Frontend Service
  frontend:
    build: ../frontend
    container_name: cyberguard-frontend
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
    depends_on:
      - backend

  # MongoDB for Backend
  mongodb:
    image: mongo:latest
    container_name: cyberguard-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
      
  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: cyberguard-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  # Wazuh Manager
  wazuh-manager:
    build: ./wazuh
    container_name: wazuh-manager
    ports:
      - "1514:1514"
      - "1515:1515"
      - "55000:55000"
    volumes:
      - wazuh_data:/var/ossec

  # Graylog
  graylog:
    build: ./graylog
    container_name: cyberguard-graylog
    ports:
      - "9000:9000"
      - "12201:12201/udp"
      - "1514:1514"
    environment:
      - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD_SECRET}
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_PASSWORD_SHA2}
      - GRAYLOG_HTTP_EXTERNAL_URI=${GRAYLOG_HTTP_EXTERNAL_URI}
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - GRAYLOG_MONGODB_URI=mongodb://mongodb:27017/graylog
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - graylog_data:/usr/share/graylog/data
      - graylog_journal:/usr/share/graylog/data/journal
    restart: unless-stopped

  # TheHive
  thehive:
    build: ./thehive
    container_name: thehive
    ports:
      - "9001:9001"
    volumes:
      - thehive_data:/opt/thp/thehive/data

  # MISP
  misp:
    build: ./misp
    container_name: misp
    ports:
      - "443:443"
    volumes:
      - misp_data:/var/www/MISP/app/files

  # Redis for OpenCTI
  redis:
    image: redis:6.2
    container_name: cyberguard-redis
    restart: unless-stopped
    
  # OpenCTI
  opencti:
    build: ./opencti
    container_name: cyberguard-opencti
    ports:
      - "8080:8080"
    environment:
      - OPENCTI_ADMIN_EMAIL=${OPENCTI_ADMIN_EMAIL}
      - OPENCTI_ADMIN_PASSWORD=${OPENCTI_ADMIN_PASSWORD}
      - OPENCTI_BASE_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_TOKEN:-ChangeMe}
      - ELASTIC_MEMORY_SIZE=512M
      - REDIS_HOSTNAME=redis
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - opencti_data:/opt/opencti/data
    depends_on:
      - redis
      - elasticsearch
    restart: unless-stopped

  # Velociraptor
  velociraptor:
    build: ./velociraptor
    container_name: velociraptor
    ports:
      - "8889:8889"
    volumes:
      - velociraptor_data:/opt/velociraptor/data

  # Shuffle
  shuffle:
    build: ./shuffle
    container_name: shuffle
    ports:
      - "3443:3443"
    volumes:
      - shuffle_data:/opt/shuffle/data

volumes:
  mongodb_data:
  elasticsearch_data:
  graylog_data:
  graylog_journal:
  wazuh_data:
  thehive_data:
  misp_data:
  opencti_data:
  velociraptor_data:
  shuffle_data:
